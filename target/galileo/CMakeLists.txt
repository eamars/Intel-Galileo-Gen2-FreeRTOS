# configuration for target
MESSAGE("ENTER ${CMAKE_CURRENT_SOURCE_DIR}")

# get module name
GET_FILENAME_COMPONENT(LIB_NAME ${CMAKE_CURRENT_SOURCE_DIR} NAME)

# define C flags
SET(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -Wall -Wstrict-prototypes -W -g3 -Wno-unused -Wno-unused-parameter -c -fmessage-length=0 -march=pentium -Wno-ignored-qualifiers -mno-ms-bitfields -ffunction-sections -ffreestanding")
SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG}-Wall -W -g3 -Wno-unused -Wno-unused-parameter -c -fmessage-length=0 -march=pentium -Wno-ignored-qualifiers -mno-ms-bitfields -ffunction-sections  -ffreestanding")
SET(CMAKE_ASM_FLAGS_DEBUG "${CMAKE_ASM_FLAGS_DEBUG} -Wa,--gdwarf2 -Wa,-march=pentium -c")

# DEBUG LD FLAGS
SET(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG}")

SET(BOARD_SPECIFIC_INCLUDE_DIRECTORY
        "${CMAKE_CURRENT_SOURCE_DIR}"
)

# build freertos
ADD_SUBDIRECTORY(freertoslib)

# build sam4s library
ADD_LIBRARY(${LIB_NAME}
        "startup.S"
)

ADD_DEPENDENCIES(${LIB_NAME}
        freertoslib
)

TARGET_LINK_LIBRARIES(${LIB_NAME}
        freertoslib
)

# set those variables visible to parents
SET(CMAKE_ASM_FLAGS_DEBUG ${CMAKE_ASM_FLAGS_DEBUG} PARENT_SCOPE)
SET(CMAKE_C_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG} PARENT_SCOPE)
SET(CMAKE_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG} PARENT_SCOPE)
SET(CMAKE_EXE_LINKER_FLAGS_DEBUG ${CMAKE_EXE_LINKER_FLAGS_DEBUG} PARENT_SCOPE)

SET(CMAKE_ASM_FLAGS_RELEASE ${CMAKE_ASM_FLAGS_RELEASE} PARENT_SCOPE)
SET(CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE} PARENT_SCOPE)
SET(CMAKE_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE} PARENT_SCOPE)
SET(CMAKE_EXE_LINKER_FLAGS_RELEASE ${CMAKE_EXE_LINKER_FLAGS_RELEASE} PARENT_SCOPE)

# forward include header files
SET(BOARD_SPECIFIC_INCLUDE_DIRECTORY ${BOARD_SPECIFIC_INCLUDE_DIRECTORY} PARENT_SCOPE)
SET(TARGET_SPECIFIC_INCLUDE_DIRECTORY ${TARGET_SPECIFIC_INCLUDE_DIRECTORY} PARENT_SCOPE)

